name: Deploy to Amazon S3

on:
  push:
    branches: ['main']

env:
  S3_BUCKET_NAME: ###
  AWS_REGION: ###
  ECR_REGISTRY_ALIAS: o8v5n8z7
  ECR_REPOSITORY_REGION: us-east-1
  ECR_REPOSITORY: chat-app-client-repository
  ECS_SERVICE: ecs-chat-app-client-service
  ECS_CLUSTER_REGION: ap-southeast-2
  ECS_CLUSTER: chat-app-cluster
  ECS_TASK_DEFINITION: .aws/task-definition.json
  CONTAINER_NAME: ecs-chat-app-client

permissions:
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    env:
      # Server env vars
      NODE_ENV: test
      JWT_SECRET: testsecret
      POSTGRES_DB: chat-app-db
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      # Client env vars
      VITE_API_BASE_URL: http://localhost:3000/api

    services:
      db:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: ./client

    steps:
      - name: Checkout server
        uses: actions/checkout@v3
        with:
          repository: shaundnz/chat-group-server
          path: server

      - name: Clean install dependencies and build server
        working-directory: ./server
        run: |
          npm ci
          npm run build

      - name: Setup database
        working-directory: ./server
        run: npm run database:reset -- TestSeeder

      - name: Start server
        working-directory: ./server
        run: |
          npm run start:prod &
          sleep 5 &&
          curl http://localhost:3000/api/health-check -I

      - name: Checkout client
        uses: actions/checkout@v3
        with:
          path: client

      - name: Clean install dependencies and build client
        run: |
          npm ci
          npm run build

      - name: Run unit tests
        run: npm run test:unit

      - name: Run E2E tests
        run: npm run test:integration

  deploy:
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials to get public ECR in us-east-1
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.ECR_REPOSITORY_REGION }}
